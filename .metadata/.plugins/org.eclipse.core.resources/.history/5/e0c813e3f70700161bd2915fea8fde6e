'''
Created on Apr 21, 2016

@author: neil
'''
from config import (ACCESS_TOKEN, ACCESS_TOKEN_SECRET,
                    CONSUMER_KEY, CONSUMER_SECRET)
import json
#Import the necessary methods from tweepy library
from tweepy.streaming import StreamListener
from tweepy import OAuthHandler
from tweepy import Stream

##Variables that contains the user credentials to access Twitter API 
#access_token = "716625282279481344-F6Y8Q4xjgMJvIeRMwIYQ1w0QKdwH5Cj"
#access_token_secret = "pZkRGURjVkIwVTLcHMNh8O8xgVXy6TvkSHRqANNMFfioa"
#consumer_key = "z7VyBknwP27VglyEPxsGG2Z8H"
#consumer_secret = "tbQn7nfkV1QCnPRQ9kAHepBEfSshkSMlMh4qteuVNEVc6qOYhz"

#class Keeper():
#    
#    def save(self, data):
#        tweet = json.loads(data)
#        _save(tweet)
#
#class StdOutDumper(Keeper):
#    
#    def _save(self, tweet):
#        print(tweet)
#

def isgeo_enabled(tweet):
    if "u'geo_enabled" in tweet:
        return tweet["u'geo_enabled"]
    return False


#This is a basic listener that just prints received tweets to stdout.
class StdOutListener(StreamListener):

    def on_data(self, data):
        print data
        return True

    def on_error(self, status):
        print status


class MyListener(StreamListener):
     
    def on_data(self, data):
        tweet = json.loads(data)
        if isgeo_enabled(tweet):
            print tweet
        return True
    
    def on_error(self, status):
        print status

def monitor_tweets(eonet_events):

    #This handles Twitter authentication and the connection to Twitter Streaming API
#    l = StdOutListener()
    l = MyListener()
    auth = OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
    auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)
    stream = Stream(auth, l)
    
#    api = tweepy.API(auth)
#    query = 'Tropical Storm Twenty'

    #This line filter Twitter Streams to capture data by the keywords: 'python', 'javascript', 'ruby'
    stream.filter(track=['RockyMountFire'])