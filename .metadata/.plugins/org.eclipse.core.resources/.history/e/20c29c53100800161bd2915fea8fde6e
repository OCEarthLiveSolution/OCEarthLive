'''
Created on Apr 21, 2016

@author: neil
'''
import string
import json
import urllib2
from config import EONET_URL

CONNECTOR_WORDS = ['THE', 'AN', 'A', 'IN', 'OF']

class EONet(object):
    '''
    Object to contain the EONet events
    '''
    event_dictionary = []
    
    def __init__(self):
        eonet = json.load(urllib2.urlopen(EONET_URL))
        self.events = eonet['events']
        print('Loaded EONet data: %s, %d events loaded.' % (eonet['description'],
                                                            len(eonet['events'])))

        self.__make_table()
        
    def __make_table(self):
        '''
        Makes a dictionary of geometries indexed by hashtags.  This supports
        monitoring the Twitter stream by hashtag and checking the geolocation.
        
        The hashtag is formed from each title by removing punctuation, and then
        combining the first three words.
        '''
        for event in self.events:
            title = event['title']
            
            # Clean up the title, removing spaces, punctuation and meaningless
            # words.
            exclude = set(string.punctuation)
            title = ''.join(ch for ch in title if ch not in exclude)
            wordlist = title.split()
            hashlist = wordlist[:3]
            
            # Assemble the hashtag.
            hashtag = '#'
            for keyword in hashlist:
                hashtag += keyword.capitalize()
            
            # Build the table of geometries.
            self.event_dictionary.append({hashtag: event['geometries']})
            print('Collected "%s" (%s).' % (title, hashtag))
            
            
            
