'''
Created on Apr 22, 2016

@author: neil
'''
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import create_engine, MetaData
from sqlalchemy import Table, Column, ForeignKey
from sqlalchemy import Integer, String, DateTime
from sqlalchemy.orm import sessionmaker

# A simple database with just one table is all that is needed.
# The engine can take an additional parameter, echo=True to see the SQL going
# to the server.
engine = create_engine('sqlite:////tmp/tweets.db', echo=True)
Base = declarative_base()
meta = MetaData(bind=engine)


# The session object exchanges data with the database.  The methods commit()
# and close() write the changes to the database and kill the connection.
class DBSession(object):
    
    def __init__(self):
        self.session = sessionmaker(bind=engine)
    
    def session(self):
        return self.session


# The EONet events
class DBEONet(Base):
    '''Contains the EONet events'''
    __table__ = Table('EONet', meta,
                      Column('eonet_id', String, primary_key=True),
                      Column('title', String),
                      Column('hashtag', String),
                      Column('geometries', String),
                      autoload=True,
                      autoload_with=engine)

# The tweets
class DBTweets(Base):
    '''Contains parsed data from the tweet'''
    __table__ = Table('Tweet', meta,
                      Column('tweet_id', String, primary_key=True),
                      Column('eonet_id', String, ForeignKey('DBEONet.eonet_id')),
                      Column('name', String),
                      Column('createDate', DateTime),
                      Column('place', String),
                      Column('msg', String),
                      Column('coordinates', String),
                      autoload=True,
                      autoload_with=engine)

# The photos in the tweets.
class DBPhotos(Base):
    '''Contains photos from the tweets.'''
    __table__ = Table('Photo', meta,
                      Column('photo_id', Integer, primary_key=True),
                      Column('tweet_id', String, ForeignKey('DBTweets.tweet_id')),
                      Column('media_url', String),
                      autoload=True,
                      autoload_with=engine)
