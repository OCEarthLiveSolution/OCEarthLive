'''
Created on Apr 22, 2016

@author: neil
'''
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import create_engine
from sqlalchemy import MetaData, Table
from sqlalchemy import Column, Integer, String, DateTime, DECIMAL
from sqlalchemy.orm import sessionmaker

# Keep the database in memory.  It gets rebuilt on startup with new tweets
# from a Twitter search.
engine = create_engine('sqlite:////tmp/tweets.db', echo=True)
Base = declarative_base()
meta = MetaData(bind=engine)


class DBSession(object):
    
    def __init__(self):
        self.session = sessionmaker(bind=engine)
    
    def session(self):
        return self.session


# Only one table holding the tweets is required.
class DBTweets(Base):
    __table__ = Table('Tweet', meta,
    
                    # eonet_id = Column(String, primary_key=True)
                    Column('id', Integer, primary_key=True),
                    Column('name', String(50)),
                    Column('createDate', DateTime),
                    Column('place', String(50)),
                    Column('msg', String(140)),
                    Column('longitude', DECIMAL(asdecimal=False), default=0.0),
                    Column('latitutde', DECIMAL(asdecimal=False), default=0.0),
                    autoload=True,
                    autoload_with=engine)
    
#    def __repr__(self):
#        return 'Tweet: (Name: %s) (Created: %s) %s' % (self.name,
#                                                       self.createDate,
#                                                       self.text)
        
# Create an empty database.
Base.metadata.create_all(engine)
